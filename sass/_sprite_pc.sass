// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$sprite-pc-a-name: 'sprite_pc-a'
$sprite-pc-a-x: 0px
$sprite-pc-a-y: 198px
$sprite-pc-a-offset-x: 0px
$sprite-pc-a-offset-y: -198px
$sprite-pc-a-width: 287px
$sprite-pc-a-height: 125px
$sprite-pc-a-total-width: 893px
$sprite-pc-a-total-height: 323px
$sprite-pc-a-image: '../img/sprite/sprite_pc.png'
$sprite-pc-a: (0px, 198px, 0px, -198px, 287px, 125px, 893px, 323px, '../img/sprite/sprite_pc.png', 'sprite_pc-a', )
$sprite-pc-b-name: 'sprite_pc-b'
$sprite-pc-b-x: 292px
$sprite-pc-b-y: 198px
$sprite-pc-b-offset-x: -292px
$sprite-pc-b-offset-y: -198px
$sprite-pc-b-width: 222px
$sprite-pc-b-height: 75px
$sprite-pc-b-total-width: 893px
$sprite-pc-b-total-height: 323px
$sprite-pc-b-image: '../img/sprite/sprite_pc.png'
$sprite-pc-b: (292px, 198px, -292px, -198px, 222px, 75px, 893px, 323px, '../img/sprite/sprite_pc.png', 'sprite_pc-b', )
$sprite-pc-close1-name: 'sprite_pc-close1'
$sprite-pc-close1-x: 701px
$sprite-pc-close1-y: 198px
$sprite-pc-close1-offset-x: -701px
$sprite-pc-close1-offset-y: -198px
$sprite-pc-close1-width: 38px
$sprite-pc-close1-height: 38px
$sprite-pc-close1-total-width: 893px
$sprite-pc-close1-total-height: 323px
$sprite-pc-close1-image: '../img/sprite/sprite_pc.png'
$sprite-pc-close1: (701px, 198px, -701px, -198px, 38px, 38px, 893px, 323px, '../img/sprite/sprite_pc.png', 'sprite_pc-close1', )
$sprite-pc-close2-name: 'sprite_pc-close2'
$sprite-pc-close2-x: 360px
$sprite-pc-close2-y: 158px
$sprite-pc-close2-offset-x: -360px
$sprite-pc-close2-offset-y: -158px
$sprite-pc-close2-width: 126px
$sprite-pc-close2-height: 29px
$sprite-pc-close2-total-width: 893px
$sprite-pc-close2-total-height: 323px
$sprite-pc-close2-image: '../img/sprite/sprite_pc.png'
$sprite-pc-close2: (360px, 158px, -360px, -158px, 126px, 29px, 893px, 323px, '../img/sprite/sprite_pc.png', 'sprite_pc-close2', )
$sprite-pc-howtoplay-name: 'sprite_pc-howtoplay'
$sprite-pc-howtoplay-x: 360px
$sprite-pc-howtoplay-y: 129px
$sprite-pc-howtoplay-offset-x: -360px
$sprite-pc-howtoplay-offset-y: -129px
$sprite-pc-howtoplay-width: 203px
$sprite-pc-howtoplay-height: 24px
$sprite-pc-howtoplay-total-width: 893px
$sprite-pc-howtoplay-total-height: 323px
$sprite-pc-howtoplay-image: '../img/sprite/sprite_pc.png'
$sprite-pc-howtoplay: (360px, 129px, -360px, -129px, 203px, 24px, 893px, 323px, '../img/sprite/sprite_pc.png', 'sprite_pc-howtoplay', )
$sprite-pc-logo-name: 'sprite_pc-logo'
$sprite-pc-logo-x: 360px
$sprite-pc-logo-y: 0px
$sprite-pc-logo-offset-x: -360px
$sprite-pc-logo-offset-y: 0px
$sprite-pc-logo-width: 533px
$sprite-pc-logo-height: 124px
$sprite-pc-logo-total-width: 893px
$sprite-pc-logo-total-height: 323px
$sprite-pc-logo-image: '../img/sprite/sprite_pc.png'
$sprite-pc-logo: (360px, 0px, -360px, 0px, 533px, 124px, 893px, 323px, '../img/sprite/sprite_pc.png', 'sprite_pc-logo', )
$sprite-pc-mundi-name: 'sprite_pc-mundi'
$sprite-pc-mundi-x: 519px
$sprite-pc-mundi-y: 198px
$sprite-pc-mundi-offset-x: -519px
$sprite-pc-mundi-offset-y: -198px
$sprite-pc-mundi-width: 84px
$sprite-pc-mundi-height: 54px
$sprite-pc-mundi-total-width: 893px
$sprite-pc-mundi-total-height: 323px
$sprite-pc-mundi-image: '../img/sprite/sprite_pc.png'
$sprite-pc-mundi: (519px, 198px, -519px, -198px, 84px, 54px, 893px, 323px, '../img/sprite/sprite_pc.png', 'sprite_pc-mundi', )
$sprite-pc-pc-name: 'sprite_pc-pc'
$sprite-pc-pc-x: 0px
$sprite-pc-pc-y: 0px
$sprite-pc-pc-offset-x: 0px
$sprite-pc-pc-offset-y: 0px
$sprite-pc-pc-width: 355px
$sprite-pc-pc-height: 193px
$sprite-pc-pc-total-width: 893px
$sprite-pc-pc-total-height: 323px
$sprite-pc-pc-image: '../img/sprite/sprite_pc.png'
$sprite-pc-pc: (0px, 0px, 0px, 0px, 355px, 193px, 893px, 323px, '../img/sprite/sprite_pc.png', 'sprite_pc-pc', )
$sprite-pc-q-btn-name: 'sprite_pc-qBtn'
$sprite-pc-q-btn-x: 608px
$sprite-pc-q-btn-y: 198px
$sprite-pc-q-btn-offset-x: -608px
$sprite-pc-q-btn-offset-y: -198px
$sprite-pc-q-btn-width: 88px
$sprite-pc-q-btn-height: 38px
$sprite-pc-q-btn-total-width: 893px
$sprite-pc-q-btn-total-height: 323px
$sprite-pc-q-btn-image: '../img/sprite/sprite_pc.png'
$sprite-pc-q-btn: (608px, 198px, -608px, -198px, 88px, 38px, 893px, 323px, '../img/sprite/sprite_pc.png', 'sprite_pc-qBtn', )
$spritesheet-width: 893px
$spritesheet-height: 323px
$spritesheet-image: '../img/sprite/sprite_pc.png'
$spritesheet-sprites: ($sprite-pc-a, $sprite-pc-b, $sprite-pc-close1, $sprite-pc-close2, $sprite-pc-howtoplay, $sprite-pc-logo, $sprite-pc-mundi, $sprite-pc-pc, $sprite-pc-q-btn, )
$spritesheet: (893px, 323px, '../img/sprite/sprite_pc.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
